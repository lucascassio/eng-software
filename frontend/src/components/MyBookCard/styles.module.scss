// src/components/MyBookCard/styles.module.scss (ou similar)

// Estilo base do card, com layout vertical (imagem acima)
// Usando :global() se este SCSS for modular e precisar aplicar ao elemento raiz do componente
// Se não for modular, remova :global()
:global(.card) { // Ou apenas .card se não for CSS Module ou se aplicar a um elemento com essa classe
  background: #34495e;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  // O padding foi removido daqui, será aplicado internamente se necessário
  margin-bottom: 1.5rem;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  display: flex;
  flex-direction: column; // Garante imagem acima do texto
  overflow: hidden; // Importante para border-radius funcionar com a imagem
}

:global(.card:hover) { // Ou apenas .card:hover
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

// Container da imagem
.coverContainer {
  width: 100%;
  aspect-ratio: 3 / 4; // Proporção da imagem (ajuste conforme preferir)
  background-color: #2c3e50; // Cor de fundo do placeholder
  display: flex;
  justify-content: center;
  align-items: center;
  // margin-bottom: 1rem; // Removido, padding do contentArea cuidará disso
  overflow: hidden;
  // border-radius: 4px; // Removido, imagem ocupa o topo do card
}

.cover {
  width: 100%;
  height: 100%;
  object-fit: cover; // Cobre o container
}

.placeholder {
  color: #ccc;
  font-size: 0.9rem;
  text-align: center;
  padding: 1rem;
}

// Container para a área de texto abaixo da imagem
.contentArea {
  padding: 1.5rem; // Padding interno para o texto
}

// Estilos para o conteúdo textual (dentro de .contentArea)
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
  // border-bottom: 1px solid rgba(255, 255, 255, 0.1); // Borda opcional
  // padding-bottom: 0.5rem;
}

.title {
  margin: 0;
  color: white;
  font-size: 1.25rem;
  font-weight: 600;
}

.status {
  font-size: 0.8rem;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-weight: 500;
  white-space: nowrap;
}

.available {
  background-color: #e8f5e9;
  color: #2e7d32;
}

.unavailable {
  background-color: #ffebee;
  color: #c62828;
}

.details {
  margin-bottom: 1rem;

  p {
    margin: 0.35rem 0;
    color: rgba(255, 255, 255, 0.85);
    font-size: 0.9rem;

    strong {
      color: rgba(255, 255, 255, 0.95);
      margin-right: 0.3rem;
    }
  }
}

.sinopse {
  // margin-bottom: 1rem; // Removido se não houver botões abaixo
  padding-top: 0.75rem;
  border-top: 1px dashed rgba(255, 255, 255, 0.2);

  p {
    margin: 0.5rem 0 0 0;
    color: rgba(255, 255, 255, 0.8);
    font-size: 0.9rem;
    line-height: 1.5;

    strong {
       color: rgba(255, 255, 255, 0.95);
       display: block;
       margin-bottom: 0.25rem;
    }
  }
}

// Estilos para .interesseButton foram REMOVIDOS

// Adicione aqui estilos para botões de Ação (Editar/Excluir) se precisar
.actions {
  margin-top: 1rem; // Espaço acima dos botões
  padding-top: 1rem; // Espaço interno acima dos botões
  border-top: 1px solid rgba(255, 255, 255, 0.1); // Linha divisória
  display: flex;
  gap: 0.75rem; // Espaço entre os botões
}

.actionButton {
  flex: 1;
  padding: 0.5rem 0.75rem;
  border: none;
  border-radius: 4px;
  font-weight: 500;
  font-size: 0.85rem;
  cursor: pointer;
  transition: all 0.2s ease;
  text-align: center;
  color: white;

  &:hover {
    opacity: 0.85;
  }

  &:active {
    transform: translateY(1px);
  }
}

.editButton {
  background-color: #3498db; // Azul
}

.deleteButton {
  background-color: #e74c3c; // Vermelho
}

